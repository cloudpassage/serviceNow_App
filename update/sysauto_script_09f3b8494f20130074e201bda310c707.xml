<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>false</active>
        <condition/>
        <conditional>false</conditional>
        <name>Run CP app</name>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period>1970-01-01 00:01:00</run_period>
        <run_start>2018-02-26 01:17:19</run_start>
        <run_time>1970-01-01 08:00:00</run_time>
        <run_type>periodically</run_type>
        <script><![CDATA[function deduplicate(events, event_id) {
	if (events.length > 0) {
		if (events[0]['id'] === event_id) events.shift();
	}
}
	
function determine_urgency(cves) {
	var max_cvss = Math.max.apply(Math, cves.map(function(o){return o.CVSS;}));
	var critical = gs.getProperty('x_195840_cp.critical_cvss');
	var high = gs.getProperty('x_195840_cp.high_cvss');

	if (max_cvss >= critical) {
		return 1; //critical
	} else if (max_cvss >= high) {
		return 2; //high
	} else {
		return 3; //low
	}
}
	
function check_existence(tags) {
	var rec = new GlideRecord('incident') ;
	rec.addQuery('short_description', tags);
	rec.query();

	while (rec.next()) {
		if (rec.number) {
			return true;
		} else {
			return false;
		}
	}
}
	
function event_vuln(event) {
	return event['package_name'];
}
	
function parsePackage(data) {
	var found = data.match(new RegExp("Vulnerable package: " + "(.*)\.[A-Z]"));
	gs.info('in parsePackage found is ' + found[1]);
	return found[1];
}
	
function create_ticket(event) {
	var tags = event['server_id'] + ',' + event_vuln(event);
	var exists = check_existence(tags);
	if (!exists) {
		var rec = new GlideRecord('incident');		
		rec.initialize();
		rec.short_description = tags;
		rec.description = event['message'];
		rec.urgency = determine_urgency(event['cves']);
		rec.insert();
	} else {
		gs.info('Ticket already exists');
	}
}
	
function update_ticket(event) {
	if (event['actor_key_label'] == 'system' && event['message'].includes("SVA")) {
		var tags = event['server_id'] + ',' + parsePackage(event['message']);
		var rec = new GlideRecord('incident');
		var user_id = gs.getUserID();

		rec.addQuery('short_description', tags);
		rec.query(); 

		while(rec.next()) { 
			gs.info("Resolved " + rec.number);
			rec.state = 6;
			rec.caller_id = user_id;
			rec.close_notes = "Resolved by API";			
			gs.info('Active incident ' + rec.number + 'resolved');
			rec.update(); 
		}
	} else {
		return 'Issue is not resolved by system';
	}
}
	
function streamEvents() {
	var cp_api = new api();
	var i = 0;
	var created_at = gs.getProperty('x_195840_cp.start_date');
	var last_event_id = null;
	while (i < 1) {
		i++;
		var data = cp_api.get("v1/events?type=vulnerable_software_package_found,issue_resolved&per_page=100&sort_by=created_at.asc&since=".concat(created_at));
		var events = data['events'];

		deduplicate(events, last_event_id);
		if (events.length > 0) {
			last_event_id = events[events.length - 1]['id'];
			created_at = events[events.length - 1]['created_at'];
		}
	
		gs.setProperty('x_195840_cp.start_date', created_at);
		process_events(events);
	}
}
	
function process_events(events) {
	for(e = 0; e < events.length; e++) {
		if (events[e]['type'] == 'vulnerable_software_package_found') {
			create_ticket(events[e]);
		} else {
			update_ticket(events[e]);
		}
	}
}
	
streamEvents();
]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-02-26 01:18:26</sys_created_on>
        <sys_id>09f3b8494f20130074e201bda310c707</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Run CP app</sys_name>
        <sys_package display_value="CloudPassage" source="x_199368_cp">4c1234014f20130074e201bda310c775</sys_package>
        <sys_policy/>
        <sys_scope display_value="CloudPassage">4c1234014f20130074e201bda310c775</sys_scope>
        <sys_update_name>sysauto_script_09f3b8494f20130074e201bda310c707</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-02-26 01:18:26</sys_updated_on>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
